/* File '8X8.TV' as include

 the array starts with a 8 char header:
  1st char: 'T' first 2 chars are FV or TV
  2nd char: 'V' for FONT VERTICAL or TRUETYPE VERTICAL
  3rd char: First code to define
  4th char: Last  code to define
  5th char: Width of character in dots
  6th char: Height of character in dots
  7th char: Height of character in chars
  8th char: chars needed for each character (1..255)
            or 0 for big fonts calculate WidthInDots * HeightInchars
  After that font data will follow */





const uint8_t font_8x8TT[] __attribute__((section(".progmem.data"))) =
{
     84,86,32,127,8,8,1,8, // TV..
     0,0,0,0,0,0,0,0, //  ( Dez. 32)
     0,0,6,95,6,0,0,0, // ! (Dez. 33)
     0,7,3,0,7,3,0,0, // "
     0,36,126,36,126,36,0,0, // #
     0,36,43,106,18,0,0,0, // $
     0,99,19,8,100,99,0,0, // %
     0,54,73,86,32,80,0,0, // &
     0,0,7,3,0,0,0,0, // '
     0,0,62,65,0,0,0,0, // (
     0,0,65,62,0,0,0,0, // )
     0,8,62,28,62,8,0,0, // *
     0,8,8,62,8,8,0,0, // +
     0,0,224,96,0,0,0,0, // ,
     0,8,8,8,8,8,0,0, // -
     0,0,96,96,0,0,0,0, // .
     0,32,16,8,4,2,0,0, // /
     0,62,81,73,69,62,0,0, // 0
     0,0,66,127,64,0,0,0, // 1
     0,98,81,73,73,70,0,0, // 2
     0,34,73,73,73,54,0,0, // 3
     0,24,20,18,127,16,0,0, // 4
     0,47,73,73,73,49,0,0, // 5
     0,60,74,73,73,48,0,0, // 6
     0,1,113,9,5,3,0,0, // 7
     0,54,73,73,73,54,0,0, // 8
     0,6,73,73,41,30,0,0, // 9
     0,0,108,108,0,0,0,0, // :
     0,0,236,108,0,0,0,0, // ;
     0,8,20,34,65,0,0,0, // <
     0,36,36,36,36,36,0,0, // =
     0,0,65,34,20,8,0,0, // >
     0,2,1,89,9,6,0,0, // ?
     0,62,65,93,85,30,0,0, // @
     0,126,17,17,17,126,0,0, // A
     0,127,73,73,73,54,0,0, // B
     0,62,65,65,65,34,0,0, // C
     0,127,65,65,65,62,0,0, // D
     0,127,73,73,73,65,0,0, // E
     0,127,9,9,9,1,0,0, // F
     0,62,65,73,73,122,0,0, // G
     0,127,8,8,8,127,0,0, // H
     0,0,65,127,65,0,0,0, // I
     0,48,64,64,64,63,0,0, // J
     0,127,8,20,34,65,0,0, // K
     0,127,64,64,64,64,0,0, // L
     0,127,2,4,2,127,0,0, // M
     0,127,2,4,8,127,0,0, // N
     0,62,65,65,65,62,0,0, // O
     0,127,9,9,9,6,0,0, // P
     0,62,65,81,33,94,0,0, // Q
     0,127,9,9,25,102,0,0, // R
     0,38,73,73,73,50,0,0, // S
     0,1,1,127,1,1,0,0, // T
     0,63,64,64,64,63,0,0, // U
     0,31,32,64,32,31,0,0, // V
     0,63,64,60,64,63,0,0, // W
     0,99,20,8,20,99,0,0, // X
     0,7,8,112,8,7,0,0, // Y
     0,113,73,69,67,0,0,0, // Z
     0,0,127,65,65,0,0,0, // [
     0,2,4,8,16,32,0,0, // "Backslash"   
     0,0,65,65,127,0,0,0, // ]
     0,4,2,1,2,4,0,0, // ^
     128,128,128,128,128,128,128,128, // _
     0,0,3,7,0,0,0,0, // `
     0,32,84,84,84,120,0,0, // a
     0,127,68,68,68,56,0,0, // b
     0,56,68,68,68,40,0,0, // c
     0,56,68,68,68,127,0,0, // d
     0,56,84,84,84,8,0,0, // e
     0,8,126,9,9,0,0,0, // f
     0,24,164,164,164,124,0,0, // g
     0,127,4,4,120,0,0,0, // h
     0,0,0,125,64,0,0,0, // i
     0,64,128,132,125,0,0,0, // j
     0,127,16,40,68,0,0,0, // k
     0,0,0,127,64,0,0,0, // l
     0,124,4,24,4,120,0,0, // m
     0,124,4,4,120,0,0,0, // n
     0,56,68,68,68,56,0,0, // o
     0,252,68,68,68,56,0,0, // p
     0,56,68,68,68,252,0,0, // q
     0,68,120,68,4,8,0,0, // r
     0,8,84,84,84,32,0,0, // s
     0,4,62,68,36,0,0,0, // t
     0,60,64,32,124,0,0,0, // u
     0,28,32,64,32,28,0,0, // v
     0,60,96,48,96,60,0,0, // w
     0,108,16,16,108,0,0,0, // x
     0,156,160,96,60,0,0,0, // y
     0,100,84,84,76,0,0,0, // z
     0,8,62,65,65,0,0,0, // {
     0,0,0,119,0,0,0,0, // | (Dez. 124)
     0,0,65,65,62,8,0,0, // }
     0,2,1,2,1,0,0,0, // ~ (Dez. 126) 
     0,60,38,35,38,60,0,0 // ⌂
};
